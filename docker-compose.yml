version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: embedded-finance-postgres
    environment:
      POSTGRES_DB: banking
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - embedded-finance-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: embedded-finance-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - embedded-finance-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # RabbitMQ for message queuing
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: embedded-finance-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - embedded-finance-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Core Banking Service
  corebanking:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: embedded-finance-corebanking
    command: ["dotnet", "CoreBanking/CoreBanking.dll"]
    ports:
      - "5001:5001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5001
      - ConnectionStrings__Postgres=Host=postgres;Database=banking;Username=postgres;Password=yourpassword
      - ConnectionStrings__Redis=redis:6379
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - embedded-finance-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Compliance Service
  compliance:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: embedded-finance-compliance
    command: ["dotnet", "Compliance/Compliance.dll"]
    ports:
      - "5002:5002"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5002
      - ConnectionStrings__Postgres=Host=postgres;Database=compliance;Username=postgres;Password=yourpassword
      - ConnectionStrings__Redis=redis:6379
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - embedded-finance-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Fraud Detection Service
  frauddetection:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: embedded-finance-frauddetection
    command: ["dotnet", "FraudDetection/FraudDetection.dll"]
    ports:
      - "5003:5003"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5003
      - ConnectionStrings__Redis=redis:6379
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - embedded-finance-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway
  apigateway:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: embedded-finance-apigateway
    command: ["dotnet", "ApiGateway/ApiGateway.dll"]
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__Redis=redis:6379
    depends_on:
      corebanking:
        condition: service_healthy
      compliance:
        condition: service_healthy
      frauddetection:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - embedded-finance-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  embedded-finance-network:
    driver: bridge 